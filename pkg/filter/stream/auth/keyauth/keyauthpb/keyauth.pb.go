// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: keyauth.proto

package keyauthpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	matchpb "mosn.io/mosn/pkg/filter/stream/auth/matchpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Authenticator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The following two fields define the location of the key extracted from the HTTP request.
	FromHeader string   `protobuf:"bytes,1,opt,name=from_header,json=fromHeader,proto3" json:"from_header,omitempty"`
	FromParam  string   `protobuf:"bytes,2,opt,name=from_param,json=fromParam,proto3" json:"from_param,omitempty"`
	Keys       []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *Authenticator) Reset() {
	*x = Authenticator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authenticator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authenticator) ProtoMessage() {}

func (x *Authenticator) ProtoReflect() protoreflect.Message {
	mi := &file_keyauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authenticator.ProtoReflect.Descriptor instead.
func (*Authenticator) Descriptor() ([]byte, []int) {
	return file_keyauth_proto_rawDescGZIP(), []int{0}
}

func (x *Authenticator) GetFromHeader() string {
	if x != nil {
		return x.FromHeader
	}
	return ""
}

func (x *Authenticator) GetFromParam() string {
	if x != nil {
		return x.FromParam
	}
	return ""
}

func (x *Authenticator) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type KeyAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of authenticator names to authenticator.
	Authenticators map[string]*Authenticator `protobuf:"bytes,1,rep,name=authenticators,proto3" json:"authenticators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Specifies requirements based on the route matches. The first matched requirement will be
	// applied. If there are overlapped match conditions, please put the most specific match first.
	Rules []*matchpb.RequirementRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *KeyAuth) Reset() {
	*x = KeyAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keyauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyAuth) ProtoMessage() {}

func (x *KeyAuth) ProtoReflect() protoreflect.Message {
	mi := &file_keyauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyAuth.ProtoReflect.Descriptor instead.
func (*KeyAuth) Descriptor() ([]byte, []int) {
	return file_keyauth_proto_rawDescGZIP(), []int{1}
}

func (x *KeyAuth) GetAuthenticators() map[string]*Authenticator {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

func (x *KeyAuth) GetRules() []*matchpb.RequirementRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

var File_keyauth_proto protoreflect.FileDescriptor

var file_keyauth_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x63, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x4c, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x65,
	0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a,
	0x59, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x6d, 0x6f,
	0x73, 0x6e, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x73, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74,
	0x68, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_keyauth_proto_rawDescOnce sync.Once
	file_keyauth_proto_rawDescData = file_keyauth_proto_rawDesc
)

func file_keyauth_proto_rawDescGZIP() []byte {
	file_keyauth_proto_rawDescOnce.Do(func() {
		file_keyauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_keyauth_proto_rawDescData)
	})
	return file_keyauth_proto_rawDescData
}

var file_keyauth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_keyauth_proto_goTypes = []interface{}{
	(*Authenticator)(nil),           // 0: keyauth.Authenticator
	(*KeyAuth)(nil),                 // 1: keyauth.KeyAuth
	nil,                             // 2: keyauth.KeyAuth.AuthenticatorsEntry
	(*matchpb.RequirementRule)(nil), // 3: match.RequirementRule
}
var file_keyauth_proto_depIdxs = []int32{
	2, // 0: keyauth.KeyAuth.authenticators:type_name -> keyauth.KeyAuth.AuthenticatorsEntry
	3, // 1: keyauth.KeyAuth.rules:type_name -> match.RequirementRule
	0, // 2: keyauth.KeyAuth.AuthenticatorsEntry.value:type_name -> keyauth.Authenticator
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_keyauth_proto_init() }
func file_keyauth_proto_init() {
	if File_keyauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_keyauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authenticator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keyauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keyauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_keyauth_proto_goTypes,
		DependencyIndexes: file_keyauth_proto_depIdxs,
		MessageInfos:      file_keyauth_proto_msgTypes,
	}.Build()
	File_keyauth_proto = out.File
	file_keyauth_proto_rawDesc = nil
	file_keyauth_proto_goTypes = nil
	file_keyauth_proto_depIdxs = nil
}
